service: urlshortner
frameworkVersion: ">=1.8.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  profile: ${file(../config.${self:custom.stage}.json):urlshortner.profile}
  environment:
    TABLE_NAME: ${self:custom.dbTable}
    ENV_STAGE: ${self:custom.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource:
        Fn::GetAtt:
          - LinkDB
          - Arn
plugins:
  - serverless-domain-manager

custom:
  dbTable: ${self:custom.stage}-shortened-urls
  stage: ${opt:stage, self:provider.stage}
  customDomain:
    domainName: urls${self:custom.stage}.${file(../config.${self:custom.stage}.json):urlshortner.domain-name}
    stage: ${self:custom.stage}
    basePath: ''
    certificateName: ${file(../config.${self:custom.stage}.json):urlshortner.certificate-name}
    createRoute53Record: true

functions:
  main:
    handler: main/index.handler
    events:
      - http:
         path: /
         method: get
  create:
    handler: create/index.handler
    events:
      - http:
         path: /
         method: post

  redirect:
    handler: redirect/index.handler
    events:
      - http:
          path: /{slug}
          method: get

resources:
  Resources:
    LinkDB:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.dbTable}
        AttributeDefinitions:
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
